(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{459:function(t,e,n){"use strict";n.r(e);var r=n(42),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"unitask"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unitask"}},[t._v("#")]),t._v(" UniTask")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/Cysharp/UniTask",target:"_blank",rel:"noopener noreferrer"}},[t._v("UniTask"),n("OutboundLink")],1),t._v(" 是基于(MIT license)的开源库，提供的高效的基于任务的异步编程实现（与"),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task",target:"_blank",rel:"noopener noreferrer"}},[t._v(".NET native"),n("OutboundLink")],1),t._v(" 相比）。你可以在"),n("a",{attrs:{href:"https://medium.com/@neuecc/a1ff0766029",target:"_blank",rel:"noopener noreferrer"}},[t._v("作者文章库"),n("OutboundLink")],1),t._v("找到更多说明和使用示例。")]),t._v(" "),n("p",[t._v("Naninovel的所有异步方法都是使用UniTask构建的；为了使用公共API（例如，添加自定义命令或引擎服务的实现），应该在您的Unity项目中安装该库。Naninovel为方便起见内附了UniTask的副本。如果您已经安装了该库，请删除"),n("code",[t._v("Naninovel/ThirdParty/UniTask")]),t._v(" 目录以防止冲突。")])])}),[],!1,null,null,null);e.default=a.exports}}]);