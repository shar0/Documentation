(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{454:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"script-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-expressions"}},[t._v("#")]),t._v(" Script Expressions")]),t._v(" "),s("p",[t._v("When writing naninovel scripts, you can inject expression constructs to command parameter values and generic text lines using curly braces "),s("code",[t._v("{}")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[t._v("One plus two equals "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v("{1 + 2}")]),t._v(".")]),t._v("\n")])])]),s("p",[t._v('— will print "One plus two equals 3" when running the script.')]),t._v(" "),s("p",[t._v("You can use any math and logical operators, as well as all the math functions from the "),s("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Mathf.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UnityEngine.Mathf"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/api/system.math#methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("System.Math"),s("OutboundLink")],1),t._v(" namespaces:")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@char")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("Kohaku")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[t._v(" scale:")])]),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v("{Pow(Cosh(33.5), 3) % Log(0.5)}")])]),t._v("\n")])])]),s("p",[t._v('— will scale character with ID "Kohaku" to the reminder from dividing hyperbolic cosine of 33.5 angle increased to power of 3 by natural logarithm of 0.5.')]),t._v(" "),s("p",[t._v("The expression is evaluated at the moment the command is executed, which allows using "),s("RouterLink",{attrs:{to:"/guide/custom-variables.html"}},[t._v("custom variables")]),t._v(" inside the expressions:")],1),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[t._v(" summary:")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[t._v('"What\'s your favorite color?"')])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@stop")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v("{color}")]),t._v(", huh? "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v('{ color == "orange" ? "Mine too!" : (color == "black" ? "That\'s depressing." : "I see...") }')])]),t._v("\n")])])]),s("p",[t._v("— will show an input UI allowing player to input their favorite color, assigning it to "),s("code",[t._v("color")]),t._v(' custom variable, then print the inputted color, followed by either "Mine too!" in case it\'s "orange", "That\'s depressing." in case it\'s "black" or "I see..." in the other cases.')]),t._v(" "),s("p",[t._v("To distinguish a plain text value from a variable name, wrap the value in double quotes "),s("code",[t._v('"')]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[t._v("This is just a plain text: "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v('{ "score" }')]),t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[t._v('And this is the value of "score" variable: '),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v("{ score }")]),t._v(".")]),t._v("\n")])])]),s("p",[t._v("In case you wish to include the double quotes in the expression, escape them "),s("strong",[t._v("twice")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[t._v("Saying "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[t._v('{ \\\\"Stop the car\\\\" }')]),t._v(" was a mistake.")]),t._v("\n")])])]),s("p",[t._v("Script expressions used in "),s("a",{attrs:{href:"/api/#set",target:"_blank"}},[s("code",[t._v("@set")])]),t._v(" and "),s("a",{attrs:{href:"/api/#if",target:"_blank"}},[s("code",[t._v("@if")])]),t._v(" commands (as well as "),s("code",[t._v("set")]),t._v(" and "),s("code",[t._v("if")]),t._v(" parameters in other commands), doesn't require curly braces:")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@set")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("randomScore=Random(-100,100)")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@goto")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("EpicLabel")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[t._v(" if:")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("Abs(randomScore)>=50")])])]),t._v("\n")])])]),s("p",[t._v("Though, just like with all the other parameter values, in case you wish to use spaces inside the expressions, you should wrap them in double quotes:")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@set")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[t._v('"randomScore = Random(-100, 100)"')])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[t._v("@goto")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[t._v("EpicLabel")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[t._v(" if:")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[t._v('"Abs(randomScore) >= 50"')])])]),t._v("\n")])])]),s("p",[t._v("To print curly braces inside a generic text line and prevent them from being recognized as an expression start and end literals, escape the braces with backslashes, eg:")]),t._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[t._v("Some text "),s("span",{pre:!0,attrs:{class:"token escaped-char"}},[t._v("\\{")]),t._v(" text inside braces "),s("span",{pre:!0,attrs:{class:"token escaped-char"}},[t._v("\\}")])]),t._v("\n")])])]),s("p",[t._v('— will print "Some text { text inside braces }" in-game.')]),t._v(" "),s("h2",{attrs:{id:"expression-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expression-functions"}},[t._v("#")]),t._v(" Expression Functions")]),t._v(" "),s("p",[t._v("The following functions can also be used inside the script expressions.")]),t._v(" "),s("div",{staticClass:"config-table"},[s("table",[s("thead",[s("tr",[s("th",[t._v("Signature")]),t._v(" "),s("th",[t._v("Description")]),t._v(" "),s("th",[t._v("Example")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Random ("),s("em",[t._v("System.Double")]),t._v(" min, "),s("em",[t._v("System.Double")]),t._v(" max)")]),t._v(" "),s("td",[t._v("Return a random float number between min [inclusive] and max [inclusive].")]),t._v(" "),s("td",[s("code",[t._v("Random(0.1, 0.85)")])])]),t._v(" "),s("tr",[s("td",[t._v("Random ("),s("em",[t._v("System.Int32")]),t._v(" min, "),s("em",[t._v("System.Int32")]),t._v(" max)")]),t._v(" "),s("td",[t._v("Return a random integer number between min [inclusive] and max [inclusive].")]),t._v(" "),s("td",[s("code",[t._v("Random(0, 100)")])])]),t._v(" "),s("tr",[s("td",[t._v("Random ("),s("em",[t._v("System.String[]")]),t._v(" args)")]),t._v(" "),s("td",[t._v("Return a string chosen from one of the provided strings.")]),t._v(" "),s("td",[s("code",[t._v('Random("Foo", "Bar", "Foobar")')])])]),t._v(" "),s("tr",[s("td",[t._v("CalculateProgress ()")]),t._v(" "),s("td",[t._v("Return a float number in 0.0 to 1.0 range, representing how many unique commands were ever executed compared to the total number of commands in all the available naninovel scripts. 1.0 means the player had "),s("code",[t._v("read through")]),t._v(" or "),s("code",[t._v("seen")]),t._v(" all the available game content. Make sure to enable "),s("code",[t._v("Count Total Commands")]),t._v(" in the script configuration menu before using this function.")]),t._v(" "),s("td",[s("code",[t._v("CalculateProgress()")])])])])])]),t._v(" "),s("h2",{attrs:{id:"adding-custom-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-custom-functions"}},[t._v("#")]),t._v(" Adding Custom Functions")]),t._v(" "),s("p",[t._v("It's possible to add custom expression functions by assigning "),s("code",[t._v("ExpressionFunctions")]),t._v(" attribute to a static C# class. All the public methods of this class with compatible signatures will then automatically become available in the script expressions.")]),t._v(" "),s("p",[t._v("Compatible signatures are the ones that take and return "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/types#simple-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("simple"),s("OutboundLink")],1),t._v(" and string types, as well as arrays of those types (with "),s("code",[t._v("params")]),t._v(" keyword).")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Naninovel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExpressionFunctions")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomFunctions")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns the provided string with all characters converted to lower-case.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" ToLower "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToLower")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns the sum of the provided numbers.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" Add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns a string randomly chosen from one of the provided strings.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" Random "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("params")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" randomIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnityEngine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("randomIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block example"},[s("p",{staticClass:"custom-block-title"},[t._v("EXAMPLE")]),t._v(" "),s("p",[t._v("Another example of adding custom expression functions to check whether an item exists in an inventory can be found in the "),s("a",{attrs:{href:"https://github.com/Naninovel/Inventory",target:"_blank",rel:"noopener noreferrer"}},[t._v("inventory example project on GitHub"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Specifically, the custom functions are implemented via "),s("a",{attrs:{href:"https://github.com/Naninovel/Inventory/blob/master/Assets/NaninovelInventory/Runtime/InventoryFunctions.cs",target:"_blank",rel:"noopener noreferrer"}},[t._v("InventoryFunctions.cs"),s("OutboundLink")],1),t._v(" runtime script.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);