(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{426:function(a,e,t){"use strict";t.r(e);var s=t(42),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"audio"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio"}},[a._v("#")]),a._v(" Audio")]),a._v(" "),t("p",[a._v("Background music (BGM) and sound effects (SFX) are covered in this article; for the voices see "),t("RouterLink",{attrs:{to:"/guide/voicing.html"}},[a._v("voicing guide")]),a._v(".")],1),a._v(" "),t("p",[a._v("To add, edit or remove BGM and SFX resources use audio resources manager accessible via "),t("code",[a._v("Naninovel -> Resources -> Audio")]),a._v(". You can use any audio formats "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/AudioFiles.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("supported by Unity"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/cacdec36623dbbfcf9f49c594de53c0f.png",alt:""}})]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("Choose file formats that are most comfortable for your development workflow. When building the project, Unity will automatically convert all the source resources (textures, audio, video, etc) to the formats most suitable for the target platform, so it won't make difference in which format you originally store the resources in the project. Find more information on how Unity manage project assets in the "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/AssetWorkflow",target:"_blank",rel:"noopener noreferrer"}},[a._v("official documentation"),t("OutboundLink")],1),a._v(".")])]),a._v(" "),t("p",[a._v("In case you have a lot of audio files and it's inconvenient to assign them via editor menu, it's possible to just drop them at "),t("code",[a._v("Resources/Naninovel/Audio")]),a._v(" folder, and they'll automatically be available in the scripts. You can additionally organize them with sub-folders, if you wish; in this case use forward slashes ("),t("code",[a._v("/")]),a._v(") when referencing them in naninovel scripts. Eg, audio clip stored as "),t("code",[a._v("Resources/Naninovel/Audio/Music/Ambient/Noise002.wav")]),a._v(" can be referenced in scripts as "),t("code",[a._v("Music/Ambient/Noise002")]),a._v(".")]),a._v(" "),t("p",[a._v("It's also possible to use "),t("RouterLink",{attrs:{to:"/guide/resource-providers.html#addressable"}},[a._v("addressable asset system")]),a._v(' to manually expose the resources. To expose an asset, assign address equal to the path you\'d use to expose it via the method described above, except omit the "Resources/" part. Eg, to expose a "MainTheme.wav" BGM, assign the clip asset following address: '),t("code",[a._v("Naninovel/Audio/MainTheme")]),a._v(". Be aware, that addressable provider is not used in editor by default; you can allow it by enabling "),t("code",[a._v("Enable Addressable In Editor")]),a._v(" property in resource provider configuration menu.")],1),a._v(" "),t("div",{staticClass:"custom-block warn"},[t("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),t("p",[a._v("Audio assets not assigned via resources manager won't be available in various editor dropdowns, such as the one used to select "),t("code",[a._v("Message Sound")]),a._v(" for a character actor.")])]),a._v(" "),t("p",[a._v("Audio playback behavior can be configured using "),t("code",[a._v("Naninovel -> Configuration -> Audio")]),a._v(" context menu; for available options see "),t("RouterLink",{attrs:{to:"/guide/configuration.html#audio"}},[a._v("configuration guide")]),a._v(".")],1),a._v(" "),t("h2",{attrs:{id:"background-music"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#background-music"}},[a._v("#")]),a._v(" Background Music")]),a._v(" "),t("p",[a._v("Use "),t("a",{attrs:{href:"/api/#bgm",target:"_blank"}},[t("code",[a._v("@bgm")])]),a._v(" command followed by the clip name to control the music playback in naninovel scripts:")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Starts playing a music track with the name `Sanctuary` in a loop")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@bgm")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Sanctuary")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Same as above, but fades-in the volume over 10 seconds and plays only once")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@bgm")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Sanctuary")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" fade:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" loop:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("false")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Changes volume of all the played music tracks to 50% over 2.5 seconds and makes them play in a loop")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@bgm")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" volume:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("0.5")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" loop:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" time:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("2.5")])])]),a._v("\n")])])]),t("p",[a._v("Music tracks are looped by default. When music track name is not specified in "),t("a",{attrs:{href:"/api/#bgm",target:"_blank"}},[t("code",[a._v("@bgm")])]),a._v(" command, all the currently played tracks will be affected. When invoked for a track that is already playing, the playback won't be affected (track won't start playing from the start), but the specified parameters (volume and whether the track is looped) will be applied.")]),a._v(" "),t("p",[a._v("It's possible to play an intro followed by a loop with "),t("code",[a._v("intro")]),a._v(" parameter, eg:")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Playes `BattleThemeIntro` once and then immediately `BattleThemeMain` in a loop.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@bgm")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("BattleThemeMain")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" intro:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("BattleThemeIntro")])])]),a._v("\n")])])]),t("p",[a._v("To stop a playing music track, use "),t("a",{attrs:{href:"/api/#stopbgm",target:"_blank"}},[t("code",[a._v("@stopBgm")])]),a._v(" command followed by clip name. When clip name is not specified, the command will stop all the currently played tracks.")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Fades-out the `Promenade` music track over 10 seconds and stops the playback")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@stopBgm")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Promenade")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" fade:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("10")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Stops all the currently played music tracks")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@stopBgm")])]),a._v("\n")])])]),t("h2",{attrs:{id:"sound-effects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sound-effects"}},[a._v("#")]),a._v(" Sound Effects")]),a._v(" "),t("p",[a._v("Use "),t("a",{attrs:{href:"/api/#sfx",target:"_blank"}},[t("code",[a._v("@sfx")])]),a._v(" and "),t("a",{attrs:{href:"/api/#stopsfx",target:"_blank"}},[t("code",[a._v("@stopSfx")])]),a._v(" commands followed by the clip name to control playback of the sound effects in naninovel scripts:")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Plays an SFX with the name `Explosion` once")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@sfx")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Explosion")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Plays an SFX with the name `Rain` in a loop")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@sfx")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Rain")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" loop:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("true")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Changes volume of all the played SFX tracks to 75% over 2.5 seconds and disables looping for all of them")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@sfx")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" volume:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("0.75")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" loop:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" time:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("2.5")])])]),a._v("\n")])])]),t("p",[a._v("Sound effect tracks are not looped by default. When sfx track name is not specified in "),t("a",{attrs:{href:"/api/#sfx",target:"_blank"}},[t("code",[a._v("@sfx")])]),a._v(" command, all the currently played tracks will be affected. When invoked for a track that is already playing, the playback won't be affected (track won't start playing from the start), but the specified parameters (volume and whether the track is looped) will be applied.")]),a._v(" "),t("p",[a._v("To stop a playing sound effect (no matter looped or not), use "),t("a",{attrs:{href:"/api/#stopsfx",target:"_blank"}},[t("code",[a._v("@stopSfx")])]),a._v(" command followed by clip name. When clip name is not specified, the command will stop all the currently played SFX tracks.")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Stop playing an SFX with the name `Rain`, fading-out for 15 seconds.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@stopSfx")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Rain")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" fade:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("15")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Stops all the currently played sound effect tracks")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@stopSfx")])]),a._v("\n")])])]),t("h2",{attrs:{id:"audio-mixer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-mixer"}},[a._v("#")]),a._v(" Audio Mixer")]),a._v(" "),t("p",[a._v("Naninovel uses an "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/AudioMixer.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("audio mixer"),t("OutboundLink")],1),a._v(" asset when playing the audio to separate BGM, SFX and voice channels.")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/6271d59ee9ac63a0a218316bd3bc78a8.png",alt:""}})]),a._v(" "),t("p",[a._v("It's possible to assign a custom mixer asset, change groups used for each audio channel and volume control handlers (exposed parameter names) in the audio configuration menu. When no custom mixer assets assigned, a default one will be used.")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/ef2db68edb871608d1718117a37e9486.png",alt:""}})]),a._v(" "),t("p",[a._v("To play an audio via a custom mixer group, specify group path with "),t("code",[a._v("group")]),a._v(" parameter available in "),t("a",{attrs:{href:"/api/#bgm",target:"_blank"}},[t("code",[a._v("@bgm")])]),a._v(", "),t("a",{attrs:{href:"/api/#sfx",target:"_blank"}},[t("code",[a._v("@sfx")])]),a._v(" and "),t("a",{attrs:{href:"/api/#voice",target:"_blank"}},[t("code",[a._v("@voice")])]),a._v(" commands.")]),a._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Play `Noise` audio resource in loop via `Master/Ambient` mixer group.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@sfx")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Noise")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" loop:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" group:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Master/Ambient")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("; Play `ScaryVoice` voice resource via `Master/Reverb` mixer group.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@voice")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("ScaryVoice")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" group:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Master/Reverb")])])]),a._v("\n")])])]),t("p",[a._v("Groups are retrieved with "),t("code",[a._v("FindMatchingGroups(groupPath)")]),a._v(" method of the currently assigned audio mixer asset; see "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Audio.AudioMixer.FindMatchingGroups",target:"_blank",rel:"noopener noreferrer"}},[a._v("Unity documentation"),t("OutboundLink")],1),a._v(" for more information on the expected path format. In case multiple groups are associated with the provided path, the first one will be used to play the audio.")]),a._v(" "),t("p",[a._v("In C# scripts, currently used audio mixer can be retrieved via "),t("code",[a._v("IAudioManager")]),a._v(" "),t("RouterLink",{attrs:{to:"/guide/engine-services.html"}},[a._v("engine service")]),a._v(".")],1),a._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")])]),a._v(" audioManager "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Engine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token generic-method"}},[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("GetService")]),t("span",{pre:!0,attrs:{class:"token generic class-name"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("IAudioManager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")])]),a._v(" audioMixer "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" audioManager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("AudioMixer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);