(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{461:function(a,t,s){"use strict";s.r(t);var n=s(42),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"脚本表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚本表达式"}},[a._v("#")]),a._v(" 脚本表达式")]),a._v(" "),s("p",[a._v("编写naninovel脚本时，可以使用花括号将表达式构造注入命令参数值和通用文本行{}：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[a._v("One plus two equals "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v("{1 + 2}")]),a._v(".")]),a._v("\n")])])]),s("p",[a._v('— 执行时会打印 "One plus two equals 3" 。')]),a._v(" "),s("p",[a._v("你可以使用任何数学和逻辑运算符，以及"),s("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Mathf.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("UnityEngine.Mathf"),s("OutboundLink")],1),a._v(" 和"),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/api/system.math#methods",target:"_blank",rel:"noopener noreferrer"}},[a._v("System.Math"),s("OutboundLink")],1),a._v(" 命名空间中的所有数学函数：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@char")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Kohaku")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" scale:")])]),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v("{Pow(Cosh(33.5), 3) % Log(0.5)}")])]),a._v("\n")])])]),s("p",[a._v("— 将ID为 “Kohaku” 的角色缩放值为后面数学运算的结果值。")]),a._v(" "),s("p",[a._v("在执行命令时对表达式进行求值，允许在表达式内部使用 "),s("RouterLink",{attrs:{to:"/zh/guide/custom-variables.html"}},[a._v("自定义变量")]),a._v(" ：")],1),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@input")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("color")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" summary:")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[a._v('"What\'s your favorite color?"')])])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@stop")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v("{color}")]),a._v(", huh? "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v('{ color == "orange" ? "Mine too!" : "I see..."}')])]),a._v("\n")])])]),s("p",[a._v("— 显示输入框，允许玩家输入喜欢的颜色，将其绑定至 "),s("code",[a._v("color")]),a._v(' 自定义变量，如果输入值等于 "orange" ，输出 "Mine too!" 否则输出 "I see..." 。')]),a._v(" "),s("p",[a._v("要将纯文本值与变量名区分开，请将值用双引号引起来 "),s("code",[a._v('"')]),a._v(" ：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[a._v("This is just a plain text: "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v('{ "score" }')]),a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[a._v('And this is the value of "score" variable: '),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v("{ score }")]),a._v(".")]),a._v("\n")])])]),s("p",[a._v("如果您希望在表达式中包含双引号，请对其进行两次转义：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[a._v("Saying "),s("span",{pre:!0,attrs:{class:"token expression selector"}},[a._v('{ \\\\"Stop the car\\\\" }')]),a._v(" was a mistake.")]),a._v("\n")])])]),s("p",[s("a",{attrs:{href:"/zh/api/#set",target:"_blank"}},[s("code",[a._v("@set")])]),a._v(" 和 "),s("a",{attrs:{href:"/zh/api/#if",target:"_blank"}},[s("code",[a._v("@if")])]),a._v(" 命令中使用的脚本表达式（以及其他命令中的set和if参数）不需要大括号：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@set")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("randomScore=Random(-100,100)")])])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@goto")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("EpicLabel")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" if:")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("Abs(randomScore)>=50")])])]),a._v("\n")])])]),s("p",[a._v("但是，与所有其他参数值一样，如果希望在表达式内部使用空格，则应将其用双引号引起来：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@set")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[a._v('"randomScore = Random(-100, 100)"')])])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token command function"}},[s("span",{pre:!0,attrs:{class:"token command-name"}},[a._v("@goto")]),s("span",{pre:!0,attrs:{class:"token command-params"}},[s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v(" ")]),s("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[a._v("EpicLabel")]),s("span",{pre:!0,attrs:{class:"token command-param-id property"}},[a._v(" if:")]),s("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[a._v('"Abs(randomScore) >= 50"')])])]),a._v("\n")])])]),s("p",[a._v("要在通用文本行内打印花括号并防止将其识别为表达式的开始和结束文字，请使用反斜杠对花括号进行转义，例如：")]),a._v(" "),s("div",{staticClass:"language-nani extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nani"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[a._v("Some text "),s("span",{pre:!0,attrs:{class:"token escaped-char"}},[a._v("\\{")]),a._v(" text inside braces "),s("span",{pre:!0,attrs:{class:"token escaped-char"}},[a._v("\\}")])]),a._v("\n")])])]),s("p",[a._v('— 将在游戏中打印出 "Some text { text inside braces }" 。')]),a._v(" "),s("h2",{attrs:{id:"表达式函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式函数"}},[a._v("#")]),a._v(" 表达式函数")]),a._v(" "),s("p",[a._v("以下函数也可以在脚本表达式中使用。")]),a._v(" "),s("div",{staticClass:"config-table"},[s("table",[s("thead",[s("tr",[s("th",[a._v("函数名")]),a._v(" "),s("th",[a._v("描述")]),a._v(" "),s("th",[a._v("示例")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("Random ("),s("em",[a._v("System.Double")]),a._v(" min, "),s("em",[a._v("System.Double")]),a._v(" max)")]),a._v(" "),s("td",[a._v("返回介于最小值[包含]和最大值[包含]之间的随机浮点数。")]),a._v(" "),s("td",[s("code",[a._v("Random(0.1, 0.85)")])])]),a._v(" "),s("tr",[s("td",[a._v("Random ("),s("em",[a._v("System.Int32")]),a._v(" min, "),s("em",[a._v("System.Int32")]),a._v(" max)")]),a._v(" "),s("td",[a._v("返回介于min [包含]和max [包含]之间的随机整数。")]),a._v(" "),s("td",[s("code",[a._v("Random(0, 100)")])])]),a._v(" "),s("tr",[s("td",[a._v("Random ("),s("em",[a._v("System.String[]")]),a._v(" args)")]),a._v(" "),s("td",[a._v("返回从提供的字符串之一中选择的字符串。")]),a._v(" "),s("td",[s("code",[a._v('Random("Foo", "Bar", "Foobar")')])])]),a._v(" "),s("tr",[s("td",[a._v("CalculateProgress ()")]),a._v(" "),s("td",[a._v("返回一个介于0.0到1.0范围内的浮点数，表示已经执行命令和Naninovel中总的可执行命令数量的占比关系。 1.0 代表玩家全部 "),s("code",[a._v("read through")]),a._v(" （浏览）或 "),s("code",[a._v("seen")]),a._v(" （看）过了所有游戏内容。使用此功能之前，请确保在脚本配置菜单中启用 "),s("code",[a._v("Count Total Commands")]),a._v(" 。")]),a._v(" "),s("td",[s("code",[a._v("CalculateProgress()")])])])])])]),a._v(" "),s("h2",{attrs:{id:"添加自定义函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加自定义函数"}},[a._v("#")]),a._v(" 添加自定义函数")]),a._v(" "),s("p",[a._v("通过将 "),s("code",[a._v("ExpressionFunctions")]),a._v(" 属性分配给静态C＃类，可以添加自定义表达式函数。此类具有兼容签名的所有公共方法将自动在脚本表达式中可用。")]),a._v(" "),s("p",[a._v("兼容的签名是采用和返回"),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types#simple-types",target:"_blank",rel:"noopener noreferrer"}},[a._v("简单"),s("OutboundLink")],1),a._v(" 和字符串类型的签名，以及这些类型的数组（带有 "),s("code",[a._v("params")]),a._v(" 关键字）。")]),a._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Naninovel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ExpressionFunctions")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CustomFunctions")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Returns the provided string with all characters converted to lower-case.")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("string")])]),a._v(" ToLower "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("string")])]),a._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ToLower")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Returns the sum of the provided numbers.")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" Add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Returns a string randomly chosen from one of the provided strings.")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("string")])]),a._v(" Random "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("params")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("args "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")])]),a._v(" randomIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" UnityEngine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("randomIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"custom-block example"},[s("p",{staticClass:"custom-block-title"},[a._v("例")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Naninovel/Inventory",target:"_blank",rel:"noopener noreferrer"}},[a._v("背包示例"),s("OutboundLink")],1),a._v(" 为演示添加自定义表达式，来判断某个道具是否在背包里。")]),a._v(" "),s("p",[a._v("另外，命令实现存储在"),s("a",{attrs:{href:"https://github.com/Naninovel/Inventory/blob/master/Assets/NaninovelInventory/Runtime/InventoryFunctions.cs",target:"_blank",rel:"noopener noreferrer"}},[a._v("InventoryFunctions.cs"),s("OutboundLink")],1),a._v(" 目录中。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);