(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{397:function(e,a,t){"use strict";t.r(a);var r=t(42),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#characters"}},[e._v("#")]),e._v(" Characters")]),e._v(" "),t("p",[e._v("Characters are actors used to represent scene entities that are placed on top of the "),t("RouterLink",{attrs:{to:"/guide/backgrounds.html"}},[e._v("backgrounds")]),e._v(".")],1),e._v(" "),t("p",[e._v("A character actor is defined with a name, appearance, visibility, transform (position, rotation, scale) and look direction. It can change appearance, visibility, transform and look direction over time.")]),e._v(" "),t("p",[e._v("Characters' behavior can be configured using "),t("code",[e._v("Naninovel -> Configuration -> Characters")]),e._v(" context menu; for available options see "),t("RouterLink",{attrs:{to:"/guide/configuration.html#characters"}},[e._v("configuration guide")]),e._v(". The characters' resources manager can be accessed using "),t("code",[e._v("Naninovel -> Resources -> Characters")]),e._v(" context menu.")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/c8a4f7f987621831b4a2ecb3145a4a07.png",alt:"Add Character"}})]),e._v(" "),t("p",[e._v("In case you have a lot of characters and/or appearances per character and it's inconvenient to assign them all via editor menu, it's possible to just drop them at "),t("code",[e._v("Resources/Naninovel/Characters")]),e._v(' folder, grouped under folders corresponding to actor ID. Eg, to add appearances for a character actor with "Kohaku" ID, store the textures (sprites) at '),t("code",[e._v("Resources/Naninovel/Characters/Kohaku")]),e._v(" folder and they'll automatically be available in the scripts.")]),e._v(" "),t("p",[e._v("You can additionally organize appearance resources with sub-folders, if you wish; in this case use forward slashes ("),t("code",[e._v("/")]),e._v(") when referencing them in naninovel scripts. Eg, appearance texture stored as "),t("code",[e._v("Resources/Naninovel/Characters/Kohaku/Casual/Angry")]),e._v(" can be referenced in scripts as "),t("code",[e._v("Casual/Angry")]),e._v(".")]),e._v(" "),t("p",[e._v("It's also possible to use "),t("RouterLink",{attrs:{to:"/guide/resource-providers.html#addressable"}},[e._v("addressable asset system")]),e._v(' to manually expose the resources. To expose an asset, assign address equal to the path you\'d use to expose it via the method described above, except omit the "Resources/" part. Eg, to expose a "Happy" appearance for "Kohaku" character, assign the texture asset following address: '),t("code",[e._v("Naninovel/Characters/Kohaku/Happy")]),e._v(". Be aware, that addressable provider is not used in editor by default; you can allow it by enabling "),t("code",[e._v("Enable Addressable In Editor")]),e._v(" property in resource provider configuration menu.")],1),e._v(" "),t("p",[e._v("In naninovel scripts, characters are mostly controlled with "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Shows character with name `Sora` with a default appearance.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Sora")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Same as above, but sets appearance to `Happy`.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Sora.Happy")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Same as above, but also positions the character 45% away from the left border")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; of the scene and 10% away from the bottom border; also makes him look to the left.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Sora.Happy")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" look:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("left")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" pos:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("45,10")])])]),e._v("\n")])])]),t("h2",{attrs:{id:"poses"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#poses"}},[e._v("#")]),e._v(" Poses")]),e._v(" "),t("p",[e._v("Each character has "),t("code",[e._v("Poses")]),e._v(" property allowing to specify named states (poses).")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/5b022d32eddb3e721ed036c96f662f5d.png",alt:""}})]),e._v(" "),t("p",[e._v("Pose name can be used as appearance in "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" command to apply all the parameters specified in the pose state at once, instead of specifying them individually via the command parameters.")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Given `SuperAngry` pose is defined for `Kohaku` character,")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; applies all the parameters specified in the pose state.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Kohaku.SuperAngry")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Same as above, but using `DropFade` transition over 3 seconds.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Kohaku.SuperAngry")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" transition:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("DropFade")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" time:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("3")])])]),e._v("\n")])])]),t("p",[e._v("Notice, that when a pose is used as appearance, you can still override individual parameters, eg:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Given `SuperAngry` pose is defined for `Kohaku` character,")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; applies all the parameters specified in the pose state,")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; except tint, which is overridden in the command.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Kohaku.SuperAngry")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" tint:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("#ff45cb")])])]),e._v("\n")])])]),t("h2",{attrs:{id:"display-names"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#display-names"}},[e._v("#")]),e._v(" Display Names")]),e._v(" "),t("p",[e._v("In the character configuration you can set a "),t("code",[e._v("Display Name")]),e._v(" for specific characters. When set, display name will be shown in the printer name label UI, instead of the character's ID. This allows using compound character names, that contains spaces and special characters (which is not allowed for IDs).")]),e._v(" "),t("p",[e._v('For localization, use "CharacterNames" '),t("a",{attrs:{href:"/guide/managed-text"}},[e._v("managed text")]),e._v(' document, which is automatically created when running generate managed text resources task. Values from the "CharacterNames" document won\'t override values set in the character metadata when under the source locale.')]),e._v(" "),t("p",[e._v("It's possible to bind a display name to a custom variable to dynamically change it throughout the game via naninovel scripts. To bind a display name, specify name of the custom variable wrapped in curly braces in the character configuration menu.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/931d0f6b09c77e13e7800d102c089d44.png",alt:""}})]),e._v(" "),t("p",[e._v("You can then change the variable value in the scripts and it will also change the display name:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@set")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v('PlayerName="Mistery')]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v('Man"')])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Player: ...")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@set")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v('PlayerName="Dr.')]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v('Stein"')])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Player: You can call me Dr. Stein.")]),e._v("\n")])])]),t("p",[e._v("It's also possible to use the name binding feature to allow player pick their display name using "),t("a",{attrs:{href:"/api/#input",target:"_blank"}},[t("code",[e._v("@input")])]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@input")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("PlayerName")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" summary:")]),t("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[e._v('"Choose your name."')])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@stop")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Player: You can call me "),t("span",{pre:!0,attrs:{class:"token expression selector"}},[e._v("{PlayerName}")]),e._v(".")]),e._v("\n")])])]),t("p",[e._v("The content of the curly braces is actually treated as a full-fledged "),t("a",{attrs:{href:"/guide/script-expressions"}},[e._v("script expression")]),e._v(", allowing complex scenarios for evaluating the display name. For example, you may want to keep a pre-defined localizable display name for a character until some point and then let the player pick a custom name.")]),e._v(" "),t("p",[e._v('Let\'s say the character in questions has "Char1" ID, pre-defined name is stored as "T_PredefinedName" '),t("RouterLink",{attrs:{to:"/guide/managed-text.html#script-text"}},[e._v("managed text record")]),e._v(', the value entered by the player will be stored as "name" '),t("a",{attrs:{href:"/guide/custom-variables"}},[e._v("custom variable")]),e._v(' and "nameSet" variable will be set to "true" when player has set the name. Assign the following expression to the '),t("code",[e._v("Display Name")]),e._v(" property: "),t("code",[e._v("{ nameSet ? name : T_PredefinedName }")]),e._v(".")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/b4bed71310ae8d0f80aff11d910d6e5b.png",alt:""}})]),e._v(" "),t("p",[e._v("Then use the following scenario script:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Char1")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Char1: My name is now pre-defined by `T_PredefinedName` managed text record.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Char1: It's localizable; try changing the locale and it will update accordingly.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Char1: Now, we'll make the player input a custom name. ")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Notice the default input value assigned via `value` parameter:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; it's retrieved from managed text and is localizable as well.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@input")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" summary:")]),t("span",{pre:!0,attrs:{class:"token quoted-string operator"}},[e._v('"Choose your name."')]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" value:")])]),t("span",{pre:!0,attrs:{class:"token expression selector"}},[e._v("{T_DefaultName}")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@stop")])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Here we set the variable, that is used in the expression")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; for display name to decide where to get the value from.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@set")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("nameSet=true")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token generic-text punctuation"}},[e._v("Char1: My display name is now bound to `name` custom variable assigned by the player.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@stop")])]),e._v("\n")])])]),t("h2",{attrs:{id:"message-colors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#message-colors"}},[e._v("#")]),e._v(" Message Colors")]),e._v(" "),t("p",[e._v("When "),t("code",[e._v("Use Character Color")]),e._v(" is enabled in the character configuration, printer text messages and name labels will be tinted in the specified colors when the corresponding character ID is specified in a "),t("a",{attrs:{href:"/api/#print",target:"_blank"}},[t("code",[e._v("@print")])]),e._v(" command or generic text line.")]),e._v(" "),t("p",[e._v("The following video demonstrates how to use display names and character colors.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/u5B5s-X2Bw0",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("h2",{attrs:{id:"avatar-textures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#avatar-textures"}},[e._v("#")]),e._v(" Avatar Textures")]),e._v(" "),t("p",[e._v("You can assign avatar textures to characters using "),t("code",[e._v("avatar")]),e._v(" parameter of "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" command. Avatars will be shown by the compatible text printers when they print a text message that is associated with the character.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/83c091c08846fa1cab8764a8d4dddeda.png",alt:""}})]),e._v(" "),t("p",[e._v("Currently, only "),t("code",[e._v("Wide")]),e._v(" and "),t("code",[e._v("Chat")]),e._v(" built-in printers (as well as their TMPro-counterparts) support the avatars feature. In order to support the feature in a custom printer, assign a game object with "),t("code",[e._v("Author Image")]),e._v(" component to "),t("code",[e._v("Author Avatar Image")]),e._v(" property of "),t("code",[e._v("Revealable Text Printer Panel")]),e._v(" component.")]),e._v(" "),t("p",[e._v("To use any given avatar, you have to first add it to the avatar resources and give it a name. You can do this via "),t("code",[e._v("Avatar Resources")]),e._v(" property in the characters configuration menu.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/5a0f10d174aa75ed87da1b472567e40b.png",alt:""}})]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("Avatar names can be arbitrary and don't have to contain an existing character ID or appearance. This is only required when you want to associate an avatar with a character so that it's shown automatically.")])]),e._v(" "),t("p",[e._v("You can then show a specific avatar texture like this:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharacaterId")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" avatar:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("AvatarName")])])]),e._v("\n")])])]),t("p",[e._v("To set a default avatar for a character, give the avatar texture resource name that equals to "),t("code",[e._v("CharacterID/Default")]),e._v("; eg, to set a default avatar for character with ID "),t("code",[e._v("Kohaku")]),e._v(" name the avatar resource "),t("code",[e._v("Kohaku/Default")]),e._v(". Default avatars will be shown automatically, even when "),t("code",[e._v("avatar")]),e._v(" parameter is not specified in the "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" commands.")]),e._v(" "),t("p",[e._v("It's also possible to associate avatars with specific character appearances, so that when character changes appearance, the avatar will also change automatically. For this, name the avatar resources using the following format: "),t("code",[e._v("CharacterID/CharacterAppearance")]),e._v(", where "),t("code",[e._v("CharacterAppearance")]),e._v(" is the name of the appearance for which to map the avatar resource.")]),e._v(" "),t("p",[e._v("To show only the avatar of a character inside a text printer, but hide the character itself, set "),t("code",[e._v("visible")]),e._v(" parameter of the "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" command to "),t("code",[e._v("false")]),e._v(", eg:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharacaterId")]),t("span",{pre:!0,attrs:{class:"token command-param-id property"}},[e._v(" visible:")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("false")])])]),e._v("\n")])])]),t("p",[e._v("In case you're constantly changing avatars while the character itself should remain hidden, consider disabling "),t("code",[e._v("Auto Show On Modify")]),e._v(" in the characters configuration menu; when disabled, you won't have to specify "),t("code",[e._v("visible:false")]),e._v(" to change any parameters of the character while it's hidden.")]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("The "),t("strong",[e._v("avatars are not directly connected with character appearances")]),e._v(' and shouldn\'t be considered as a way to represent a character on scene. Avatars is a standalone feature, that "injects" an arbitrary image to a compatible text printer. In case you want an actual character appear inside a text printer (or a custom UI), check '),t("RouterLink",{attrs:{to:"/guide/characters.html#render-to-texture"}},[e._v("render actor to texture")]),e._v(" feature.")],1)]),e._v(" "),t("h2",{attrs:{id:"speaker-highlight"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#speaker-highlight"}},[e._v("#")]),e._v(" Speaker Highlight")]),e._v(" "),t("p",[e._v("When enabled in the character configuration, will tint the character based on whether the last printed message is associated with it.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/gobowgagdyE",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("h2",{attrs:{id:"lip-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lip-sync"}},[e._v("#")]),e._v(" Lip Sync")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/guide/characters.html#generic-characters"}},[e._v("Generic")]),e._v(", "),t("RouterLink",{attrs:{to:"/guide/characters.html#layered-characters"}},[e._v("layered")]),e._v(" and "),t("RouterLink",{attrs:{to:"/guide/characters.html#live2d-characters"}},[e._v("Live2D")]),e._v(" character implementations support lip synchronization feature, allowing drive character's mouth animation while it's the author of the printed message by sending the appropriate events.")],1),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/fx_YS2ZQGHI",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("p",[e._v("When "),t("RouterLink",{attrs:{to:"/guide/voicing.html#auto-voicing"}},[e._v("auto voicing")]),e._v(" feature is enabled, lip sync events will be driven by the voice over; otherwise, printed text messages will activate the events. In the latter case, you'll probably sometimes want to manually start or stop the lip sync (eg, to prevent mouth animation when punctuation marks are printed); for such cases, use "),t("a",{attrs:{href:"/api/#lipsync",target:"_blank"}},[t("code",[e._v("@lipSync")])]),e._v(" command.")],1),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/guide/characters.html#generic-characters"}},[e._v("Generic")]),e._v(", "),t("RouterLink",{attrs:{to:"/guide/characters.html#layered-characters"}},[e._v("layered")]),e._v(" and "),t("RouterLink",{attrs:{to:"/guide/characters.html#live2d-characters"}},[e._v("Live2D")]),e._v(" character implementation docs below for the details on how to set up the lip sync feature.")],1),e._v(" "),t("h2",{attrs:{id:"linked-printer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linked-printer"}},[e._v("#")]),e._v(" Linked Printer")]),e._v(" "),t("p",[e._v("It's possible to associate a "),t("RouterLink",{attrs:{to:"/guide/text-printers.html"}},[e._v("text printer")]),e._v(" with a character using "),t("code",[e._v("Linked Printer")]),e._v(" property.")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/50ca6b39cd7f708158678339244b1dc4.png",alt:""}})]),e._v(" "),t("p",[e._v("When linked, the printer will automatically be used to handle messages authored by the character.")]),e._v(" "),t("p",[e._v("Be aware, that "),t("a",{attrs:{href:"/api/#print",target:"_blank"}},[t("code",[e._v("@print")])]),e._v(" commands (that are also used under the hood when printing generic text lines) make associated printers default and hide other visible printers by default. When printers are linked to characters, print commands will automatically change the currently visible and default text printer, while printing text associated with the corresponding characters. It's possible to prevent this behavior by disabling "),t("code",[e._v("Auto Default")]),e._v(" property in printer actor configuration menu; when disabled you'll have to manually show/hide and switch default printers with "),t("a",{attrs:{href:"/api/#printer",target:"_blank"}},[t("code",[e._v("@printer")])]),e._v(" commands.")]),e._v(" "),t("h2",{attrs:{id:"sprite-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sprite-characters"}},[e._v("#")]),e._v(" Sprite Characters")]),e._v(" "),t("p",[e._v("Sprite implementation of the character actors is the most common and simple one; it uses a set of "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/Textures.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("texture"),t("OutboundLink")],1),e._v(" assets wrapped over a quad mesh (sprite) to represent appearances of the character. The textures can be based on "),t("code",[e._v(".jpg")]),e._v(", "),t("code",[e._v(".png")]),e._v(", "),t("code",[e._v(".tiff")]),e._v(", "),t("code",[e._v(".psd")]),e._v(" or any other image file format "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/ImportingTextures",target:"_blank",rel:"noopener noreferrer"}},[e._v("supported by Unity"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("Choose file formats that are most comfortable for your development workflow. When building the project, Unity will automatically convert all the source resources (textures, audio, video, etc) to the formats most suitable for the target platform, so it won't make difference in which format you originally store the resources in the project. Find more information on how Unity manage project assets in the "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/AssetWorkflow",target:"_blank",rel:"noopener noreferrer"}},[e._v("official documentation"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("p",[e._v("Initial (unscaled) size of the sprite character mesh on scene depends on the "),t("RouterLink",{attrs:{to:"/guide/backgrounds.html#reference-resolution"}},[e._v("reference resolution")]),e._v(", character's "),t("code",[e._v("Pixel Per Unit")]),e._v(" property (set for each character actor in the configuration menu) and source texture resolution.")],1),e._v(" "),t("p",[e._v("To achieve best render quality and optimal performance, it's generally advised to keep the default "),t("code",[e._v("Pixel Per Unit")]),e._v(" value (100) for all the characters and control the desired initial character size via texture resolution. For example, given reference resolution in your game is the default "),t("code",[e._v("1920x1080")]),e._v(" pixels, to make a character occupy the whole screen height, set height of the character's texture (eg, by resizing it via Photoshop or other image editor) to "),t("code",[e._v("1080")]),e._v(" pixels; to make another character occupy 2/3 of the screen height, set the height to "),t("code",[e._v("1080 * 2/3")]),e._v(" and so on.")]),e._v(" "),t("h2",{attrs:{id:"diced-sprite-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diced-sprite-characters"}},[e._v("#")]),e._v(" Diced Sprite Characters")]),e._v(" "),t("p",[e._v("Built with an open source "),t("a",{attrs:{href:"https://github.com/Elringus/SpriteDicing",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpriteDicing"),t("OutboundLink")],1),e._v(" package, "),t("code",[e._v("DicedSpriteCharacter")]),e._v(" implementation allows to significantly reduce build size and texture memory by reusing texture areas of the character sprites.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/af08d141e7a08b6a8e2ef60c07332bbf.png",alt:"Sprite Dicing"}})]),e._v(" "),t("p",[e._v("Install the package via "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/upm-ui.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unity package manager"),t("OutboundLink")],1),e._v(': open package manager window (Window -> Package Manager), click "+" button, choose "Add package from git URL", enter '),t("code",[e._v("https://github.com/Elringus/SpriteDicing.git#package")]),e._v(' to the input field and click "Add".')]),e._v(" "),t("p",[t("video",{staticClass:"video",attrs:{loop:"",autoplay:"",muted:""},domProps:{muted:!0}},[t("source",{attrs:{src:"https://i.gyazo.com/b54e9daa9a483d9bf7f74f0e94b2d38a.mp4",type:"video/mp4"}})])]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("Before installing a package from a Git repository, make sure a "),t("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git client"),t("OutboundLink")],1),e._v(" is installed on your machine and Git executable path is set to the "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/PATH_(variable)",target:"_blank",rel:"noopener noreferrer"}},[e._v("PATH system environment variable"),t("OutboundLink")],1),e._v(" (usually performed automatically during the installation).")])]),e._v(" "),t("p",[e._v('When "SpriteDicing" extension is installed via UPM, a '),t("code",[e._v("Naninovel.DicedSpriteCharacter")]),e._v(" option will appear in the character implementations list.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/25360c9287a7b5a6a7feaba987a2bbb4.png",alt:""}})]),e._v(" "),t("p",[t("code",[e._v("DicedSpriteAtlas")]),e._v(" assets containing character appearances are used as the resources for the diced sprite characters. Each appearance is mapped by name to the diced sprites contained in the atlas.")]),e._v(" "),t("p",[e._v("Be aware, that some of diced character metadata properties (eg, pixels per unit, pivot) are controlled by the atlas asset; while the values in the character configuration are applied to a render texture used to represent the actual sprite. When changing the atlas properties, don't forget to rebuild it for changes to take effect.")]),e._v(" "),t("p",[e._v("Before generating the diced atlas, make sure to enable "),t("code",[e._v("Keep Original")]),e._v(" under the "),t("code",[e._v("Pivot")]),e._v(" option.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/9efa21f6272e00a3a5d8f27d9feb88ff.png",alt:""}})]),e._v(" "),t("p",[e._v("The following video guide covers creating and configuring diced sprite atlas, adding new diced character based on the created atlas and controlling the character from a naninovel script.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/6PdOAOsnhio",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("h2",{attrs:{id:"layered-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#layered-characters"}},[e._v("#")]),e._v(" Layered Characters")]),e._v(" "),t("p",[e._v("The layered implementation allows composing characters from multiple layers and then toggle them individually or in groups via naninovel scripts at runtime.")]),e._v(" "),t("p",[e._v("To create a layered character prefab, use "),t("code",[e._v("Create -> Naninovel -> Character -> Layered")]),e._v(" asset context menu. Enter "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/EditingInPrefabMode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("prefab editing mode"),t("OutboundLink")],1),e._v(" to compose the layers. Several layers and groups will be created by default. You can use them or delete and add your own.")]),e._v(" "),t("p",[e._v("Each child game object of the root prefab object with a "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Renderer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("renderer"),t("OutboundLink")],1),e._v("-derived component (eg, "),t("code",[e._v("SpriteRenderer")]),e._v(", "),t("code",[e._v("MeshRenderer")]),e._v(", eg) is considered a "),t("em",[e._v("layer")]),e._v("; other objects considered "),t("em",[e._v("groups")]),e._v(". Aside from organization and transformation purposes, placing layers inside groups will allow you to select a single layer or disable/enable all the layers inside a group with a single expression in naninovel script (more on that later).")]),e._v(" "),t("p",[e._v("To hide specific layers from being visible by default, disable renderer components (not the game objects).")]),e._v(" "),t("p",[e._v("The white frame drawn over the prefab is used to describe the actor canvas, which will be rendered to a render texture at runtime. Make sure to minimize the empty areas inside the frame by moving the layers and groups to prevent wasting texture memory and for anchoring to work correctly. To set a custom canvas size (eg, in case some layers are animated and can stretch out of the default canvas), add "),t("code",[e._v("Render Canvas")]),e._v(" component to the root object and set "),t("code",[e._v("Size")]),e._v(" property.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/4ff103c27858ac9671ba3b94ab1ade20.png",alt:""}})]),e._v(" "),t("p",[e._v("You can scale the root game object to fine-tune the default size of the actor.")]),e._v(" "),t("p",[e._v("When authoring layered character art in Photoshop, consider using Unity's "),t("a",{attrs:{href:"https://docs.unity3d.com/Packages/com.unity.2d.psdimporter@3.0/manual/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("PSD Importer package"),t("OutboundLink")],1),e._v(" to automatically generate character prefab preserving all the layers and their positions. To preserve the layers hierarchy, make sure to enable "),t("code",[e._v("Use Layer Grouping")]),e._v(" option in the import settings.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("When using sprites, set "),t("code",[e._v("Mesh Type")]),e._v(" to "),t("code",[e._v("Full Rect")]),e._v(" in the texture import settings to prevent rendering issues.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/16ebf843081c826e0add1a6304c2608f.png",alt:""}})])]),e._v(" "),t("p",[e._v("Don't forget to add the created layered prefab to the character resources ("),t("code",[e._v("Naninovel -> Resources -> Characters")]),e._v('). Choose "Naninovel.LayeredCharacter" implementation and drop prefab to the "Resource" field when configuring the resource record.')]),e._v(" "),t("p",[e._v("To control the layered characters in naninovel scripts, use "),t("a",{attrs:{href:"/api/#char",target:"_blank"}},[t("code",[e._v("@char")])]),e._v(" command in the same way as with the other character implementations. The only difference is how you set the appearance: instead of a single ID, use the "),t("em",[e._v("layer composition expression")]),e._v(". There are three expression types:")]),e._v(" "),t("ul",[t("li",[e._v("Enable a single layer in group: "),t("code",[e._v("group>layer")])]),e._v(" "),t("li",[e._v("Enable a layer: "),t("code",[e._v("group+layer")])]),e._v(" "),t("li",[e._v("Disable a layer: "),t("code",[e._v("group-layer")])])]),e._v(" "),t("p",[e._v('For example, consider a "Miho" character, which has a "Body" group with three layers: "Uniform", "SportSuit" and "Pajama". To enable "Uniform" layer and disable all the others, use the following command:')]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Miho.Body>Uniform")])])]),e._v("\n")])])]),t("p",[e._v('To enable or disable a layer without affecting any other layers in the group, use "+" and "-" respectively instead of ">". You can also specify multiple composition expressions splitting them with commas:')]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('; Enable glasses, disable hat, select "Cool" emotion.')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharId.Head/Accessories+BlackGlasses,Head-Hat,Head/Emotions>Cool")])])]),e._v("\n")])])]),t("p",[e._v("To select a layer outside of any groups (a child of the root prefab object), just skip the group part, eg:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('; Given "Halo" layer object is placed under the prefab root, disable it')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharId.-Halo")])])]),e._v("\n")])])]),t("p",[e._v("It's also possible to affect all the layers inside a group (and additionally its neighbors when using select expression) by omitting layer name in composition expression:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('; Disable all the layers in "Body/Decoration" group')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharId.Body/Decoration-")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Enable all the existing layers.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharId.+")])])]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Given `Poses/Light` and `Poses/Dark` groups (each containing multiple layers), ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; enable all the layers inside `Light` group and disable layers inside `Dark` group")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("CharId.Poses/Light>")])])]),e._v("\n")])])]),t("p",[e._v("The above expressions will affect not only the direct descendants of the target groups, but all the layers contained in the underlying groups, recursively.")]),e._v(" "),t("p",[e._v("When an appearance is not specified (eg, "),t("code",[e._v("@char CharId")]),e._v(" without previously setting any appearance), a default appearance will be used; default appearance of the layered characters equals to how the layered prefab looks in the editor.")]),e._v(" "),t("p",[e._v("The video below demonstrates how to setup a layered character and control it via naninovel commands.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/Bl3kXrg8tiI",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[t("code",[e._v("@char Miho.Shoes>")]),e._v(' command displayed in the video will actually select the "Shoes" group (disabling all the neighbor groups), not hide it. Correct command to hide a group is '),t("code",[e._v("@char Miho.Shoes-")]),e._v(".")])]),e._v(" "),t("p",[e._v("It's possible to map composition expressions to keys via "),t("code",[e._v("Composition Map")]),e._v(" property of "),t("code",[e._v("Layered Character Behaviour")]),e._v(" component:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/ede5cde3548a3187aa714d3e140750ba.png",alt:""}})]),e._v(" "),t("p",[e._v("— the keys can then be used to specify layered actor appearance:")]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Corresponds to `Body>Uniform,Hair/Back>Straight,Hair/Front>Straight,Shoes>Grey`.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Miho.Uniform")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("; Corresponds to `Hair/Back>Straight,Hair/Front>Straight`.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Miho.StraightHair")])])]),e._v("\n")])])]),t("p",[e._v('While editing layered character prefab, it\'s possible to preview mapped composition expressions by right-clicking a map record and selecting "Preview Composition".')]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/9fb0aeccf4f33245d9f975592ee86dbc.gif",alt:""}})]),e._v(" "),t("p",[e._v("Be aware, that the layer objects are not directly rendered by Unity cameras at runtime; instead, they're rendered once upon each composition (appearance) change to a temporary render texture, which is then fed to a custom mesh visible to the Naninovel camera. This setup is required to prevent semi-transparency overdraw issues and to support transition animation effects.")]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("It's not recommended to use semi-transparent textures for root layers; otherwise, the non-opaque areas will appear darker, than they actually are. If using such layers is a must, one solution is to render the actor in reversed order with a special shader; see "),t("a",{attrs:{href:"https://forum.naninovel.com/viewtopic.php?f=8&t=59",target:"_blank",rel:"noopener noreferrer"}},[e._v("the forum thread"),t("OutboundLink")],1),e._v(" for an example.")])]),e._v(" "),t("p",[e._v("In case you wish to apply an animation or other dynamic behaviour to the layered character, enable "),t("code",[e._v("Animated")]),e._v(" property found on "),t("code",[e._v("Layered Character Behaviour")]),e._v(" component. When the property is enabled, the layers will be rendered each frame (instead once per appearance change).")]),e._v(" "),t("p",[e._v("To set up lip sync feature for layered characters, use "),t("code",[e._v("On Started Speaking")]),e._v(" and "),t("code",[e._v("On Finished Speaking")]),e._v(" Unity events of "),t("code",[e._v("Layered Character Behaviour")]),e._v(" component. When the character becomes or ceases to be the author of any printed message (or rather when the message is fully revealed), the events will be invoked allowing you to trigger any custom logic, like starting or stopping mouth animation of the controlled character.")]),e._v(" "),t("h2",{attrs:{id:"generic-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generic-characters"}},[e._v("#")]),e._v(" Generic Characters")]),e._v(" "),t("p",[e._v("Generic character is the most flexible character actor implementation. It's based on a prefab with a "),t("code",[e._v("Generic Character Behaviour")]),e._v(" component attached to the root object. Appearance changes and all the other character parameters are routed as "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/UnityEvents.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unity events"),t("OutboundLink")],1),e._v(" allowing to implement the behavior of the underlying object in any way you wish.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/d0ea1bf7a5ed3b4bb7eb70c4ddbfeba2.png",alt:""}})]),e._v(" "),t("div",{staticClass:"custom-block warn"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("Generic actor implementations just route events from the scenario scripts and it's up to user to implement the underlying behaviour, eg how the actor should react to the appearance or visibility change commands, whether and how it will support speaker highlight feature, etc. Don't expect most of the actor-related features to work automatically with the generic implementations.")])]),e._v(" "),t("p",[e._v("To create generic character prefab from a template, use "),t("code",[e._v("Create -> Naninovel -> Character -> Generic")]),e._v(" context asset menu.")]),e._v(" "),t("p",[e._v("To set up lip sync feature for generic characters, use "),t("code",[e._v("On Started Speaking")]),e._v(" and "),t("code",[e._v("On Finished Speaking")]),e._v(" Unity events of "),t("code",[e._v("Generic Character Behaviour")]),e._v(" component. When the character becomes or ceases to be the author of any printed message (or rather when the message is fully revealed), the events will be invoked allowing you to trigger any custom logic, like starting or stopping mouth animation of the controlled character. This is similar to how UI's "),t("code",[e._v("On Show")]),e._v(" and "),t("code",[e._v("On Hide")]),e._v(" events work; find how they can be used to drive a custom animation in the "),t("RouterLink",{attrs:{to:"/guide/user-interface.html#adding-custom-ui"}},[e._v("UI customization guide")]),e._v(".")],1),e._v(" "),t("p",[e._v("Check the following video tutorial for example on setting up a 3D rigged model as a generic character and routing appearance changes to the rig animations via "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/class-AnimatorController.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Animator"),t("OutboundLink")],1),e._v(" component. Be aware, that the video is captured with an old Naninovel version and some properties and component names are different now; see the above docs for the up to date information.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/HPxhR0I1u2Q",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("Unity's "),t("code",[e._v("Animator")]),e._v(" component could fail to register "),t("code",[e._v("SetTrigger")]),e._v(" when the game object is enabled/disabled in the same frame; in case you use "),t("code",[e._v("GameObject.SetActive")]),e._v(" to handle visibility changes (as it's shown in the above tutorial), consider enabling/disabling the child objects with renderers instead.")])]),e._v(" "),t("h2",{attrs:{id:"live2d-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#live2d-characters"}},[e._v("#")]),e._v(" Live2D Characters")]),e._v(" "),t("p",[e._v("Live2D character implementation uses assets created with "),t("a",{attrs:{href:"https://www.live2d.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism"),t("OutboundLink")],1),e._v(" 2D modeling and animation software.")]),e._v(" "),t("p",[e._v("In order to be able to use this implementation you have to first install "),t("a",{attrs:{href:"https://live2d.github.io/#unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism SDK for Unity"),t("OutboundLink")],1),e._v(". Consult official Live2D docs for the installation and usage instructions.")]),e._v(" "),t("p",[e._v("Then download and import Naninovel's "),t("a",{attrs:{href:"https://github.com/Naninovel/Live2D/raw/master/NaninovelLive2D.unitypackage",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D extension package"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Live2D model prefab used as the resource for the implementation should have a "),t("code",[e._v("Live2DController")]),e._v(" component attached to the root object. Appearance changes are routed to the animator component as "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),t("OutboundLink")],1),e._v(' commands appearance being the trigger name. Eg, if you have a "Kaori" Live2D character prefab and want to invoke a trigger with name "Surprise", use the following command:')]),e._v(" "),t("div",{staticClass:"language-nani extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nani"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command function"}},[t("span",{pre:!0,attrs:{class:"token command-name"}},[e._v("@char")]),t("span",{pre:!0,attrs:{class:"token command-params"}},[t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token command-param-value operator"}},[e._v("Kaori.Surprise")])])]),e._v("\n")])])]),t("p",[e._v("Note, that the above command will only attempt to invoke a "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),t("OutboundLink")],1),e._v(' with "Surprise" argument on the animator controller attached to the prefab; you have to compose underlying '),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/Animator",target:"_blank",rel:"noopener noreferrer"}},[e._v("animator"),t("OutboundLink")],1),e._v(" state machine yourself.")]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("Current actual version of Cubism SDK for Unity is working directly with "),t("code",[e._v("Animator")]),e._v(" component; expressions and poses (exported as expression.json and pose.json), that were previously used in Cubism 2.x are now "),t("a",{attrs:{href:"https://docs.live2d.com/cubism-sdk-tutorials/blendexpression",target:"_blank",rel:"noopener noreferrer"}},[e._v("deprecated"),t("OutboundLink")],1),e._v(" and not supported by Naninovel's extension for Live2D.")])]),e._v(" "),t("p",[e._v("When Live2D's "),t("code",[e._v("CubismLookController")]),e._v(" and "),t("code",[e._v("CubismMouthController")]),e._v(" components are present and setup on the Live2D model prefab, "),t("code",[e._v("Live2DController")]),e._v(" can optionally use them to control look direction and mouth animation (aka lip sync feature) of the character.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/498fe948bc5cbdb4dfc5ebc5437ae6b4.png",alt:""}})]),e._v(" "),t("p",[e._v("Consult Live2D documentation on "),t("a",{attrs:{href:"https://docs.live2d.com/cubism-sdk-tutorials/lookat",target:"_blank",rel:"noopener noreferrer"}},[e._v("eye tracking"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://docs.live2d.com/cubism-sdk-tutorials/lipsync",target:"_blank",rel:"noopener noreferrer"}},[e._v("lip sync"),t("OutboundLink")],1),e._v(" for the setup details.")]),e._v(" "),t("p",[e._v("In case the model appears too small or large, set an initial scale for the root Live2D prefab game object as "),t("a",{attrs:{href:"https://youtu.be/rw_Z69z0pAg?t=353",target:"_blank",rel:"noopener noreferrer"}},[e._v("shown in the video guide"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Internally, Live2D model is rendered to a texture, which is then projected to the screen. This is required to prevent semi-transparency overdraw artifacts when fading the character. Naninovel will attempt to evaluate size of the render canvas automatically, but in case the model contains animated parts that are moved outside of the initial bounds, the parts will be clipped. To prevent that, add "),t("code",[e._v("Render Canvas")]),e._v(" component to the root game object of the Live2D prefab and set the desired size of the canvas manually. Enable "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/GizmosMenu.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("gizmos"),t("OutboundLink")],1),e._v(" to preview current render canvas size while in prefab mode.")]),e._v(" "),t("p",[t("video",{staticClass:"video",attrs:{loop:"",autoplay:"",muted:""},domProps:{muted:!0}},[t("source",{attrs:{src:"https://i.gyazo.com/23f916ae104f57828914221333e42dbf.mp4",type:"video/mp4"}})])]),e._v(" "),t("p",[e._v("Be aware, that larger the size, the more memory will the texture consume, so keep it as small, as possible.")]),e._v(" "),t("p",[e._v("Following video guide covers exporting a Live2D character from Cubism Editor, configuring the prefab, creating a simple animator state machine and controlling the character from a naninovel script.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/rw_Z69z0pAg",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("div",{staticClass:"custom-block example"},[t("p",{staticClass:"custom-block-title"},[e._v("EXAMPLE")]),e._v(" "),t("p",[e._v("Check out an "),t("a",{attrs:{href:"https://github.com/Naninovel/Live2D",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project on GitHub"),t("OutboundLink")],1),e._v(", where a Live2D character is used with Naninovel. Be aware, that Naninovel package is not distributed with the project, hence compilation errors will be produced after opening it for the first time; import Naninovel from the Asset Store to resolve the issues.")])]),e._v(" "),t("h2",{attrs:{id:"narrator-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#narrator-characters"}},[e._v("#")]),e._v(" Narrator Characters")]),e._v(" "),t("p",[e._v("Narrator characters don't have any presence on scene (appearances, position, look direction, tint, etc), but are still able to author printed messages and have the related configuration options (display name, message color, linked printer, etc).")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/f1ee43da312b29f3236cf772d9ea9fa7.png",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"render-to-texture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render-to-texture"}},[e._v("#")]),e._v(" Render to Texture")]),e._v(" "),t("p",[e._v("It's possible to render character and background actors of all the implementations (except generic) to a texture asset, which can then can be assigned to a custom UI, printer, material or any other compatible source.")]),e._v(" "),t("p",[e._v("Assign the render texture asset via actor configuration with "),t("code",[e._v("Render Texture")]),e._v(" property. When a texture is assigned, the actor won't appear as a game object on scene, but will rather be rendered to the texture. "),t("code",[e._v("Correct Render Aspect")]),e._v(" property will show up when a texture is assigned, controlling whether the rendered actor should preserve aspect no matter render texture resolution.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/c281b11a2db0ef13d87eb4bef4d45f7d.png",alt:""}})]),e._v(" "),t("p",[e._v("Be aware, that when an actor is rendered to a texture, transformations (position, rotation, scale) and some other modifications won't have any effect. Instead, transform the host object of the render texture (eg, image in case the texture is assigned to UI raw image component).")]),e._v(" "),t("p",[e._v("The video below demonstrates how to render a Live2D character to a texture, which is assigned to custom text printer. The printer is linked to the character, so the character will automatically show and hide with the printer when the associated text messages are processed.")]),e._v(" "),t("p"),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/81OTbSAnWbw",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),t("p"),e._v(" "),t("div",{staticClass:"custom-block example"},[t("p",{staticClass:"custom-block-title"},[e._v("EXAMPLE")]),e._v(" "),t("p",[e._v("For a complete example on setting up Live2D character render to texture and binding it with a text printer, see "),t("a",{attrs:{href:"https://github.com/Naninovel/Live2D",target:"_blank",rel:"noopener noreferrer"}},[e._v("Naninovel Live2D project on GitHub"),t("OutboundLink")],1),e._v(". Be aware, that Naninovel package is not distributed with the project, hence compilation errors will be produced after opening it for the first time; import Naninovel from the Asset Store to resolve the issues.")])]),e._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTICE")]),e._v(" "),t("p",[e._v("All the other character and background implementation types (except generic) can be set up to render to texture in the same way, as the Live2D one described above.")])]),e._v(" "),t("div",{staticClass:"custom-block warn"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("When using "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/com.unity.addressables.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("addressables package"),t("OutboundLink")],1),e._v(", Unity "),t("a",{attrs:{href:"https://issuetracker.unity3d.com/product/unity/issues/guid/1277169",target:"_blank",rel:"noopener noreferrer"}},[e._v("can't properly track asset references"),t("OutboundLink")],1),e._v(", which may cause render texture duplication in build preventing the feature from working correctly. Either manually handle the references (via "),t("code",[e._v("AssetReference")]),e._v(" API) or use "),t("code",[e._v("Get Actor Render Texture")]),e._v(" component as illustrated below.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/92772b1fa51e6042efcd3de67d05fd79.png",alt:""}})])])])}),[],!1,null,null,null);a.default=s.exports}}]);